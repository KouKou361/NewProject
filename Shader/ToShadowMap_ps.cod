//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbSubset
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16 [unused]
//   float maskVolume;                  // Offset:   16 Size:     4
//   float3 dummy;                      // Offset:   20 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// MaskTexture                       texture  float4          2d             t5      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyzw        1     NONE   float     zw
// TEXCOORD                 2   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.Depth.x; v1.y <- input.Depth.y; v1.z <- input.Depth.z; v1.w <- input.Depth.w; 
//   v2.x <- input.texcoord.x; v2.y <- input.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "C:\Users\PC_User\Documents\Program\Shader\ToShadowMap_ps.hlsl"
div r0.y, v1.z, v1.w  // r0.y <- LightDepth

#line 6
mul r0.z, r0.y, r0.y  // r0.z <- color.y
itof r0.xw, l(1, 0, 0, 0)  // r0.x <- color.w; r0.w <- color.z
mov r0.y, r0.y  // r0.y <- color.x

#line 8
nop 
nop 
mov r0.x, r0.x

#line 16 "C:\Users\PC_User\Documents\Program\Shader\Mask.hlsli"
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t5.xyzw, s0
mov r1.x, r1.x  // r1.x <- mask_value

#line 18
ge r1.x, r1.x, cb2[1].x
movc r1.x, r1.x, l(1.000000), l(0)  // r1.x <- alpha

#line 20
mul r0.x, r0.x, r1.x

#line 23
mov r0.x, r0.x  // r0.x <- <Mask return value>.w

#line 8 "C:\Users\PC_User\Documents\Program\Shader\ToShadowMap_ps.hlsl"
mov r0.x, r0.x  // r0.x <- mask.w

#line 10
mov o0.xyz, r0.yzwy
mov o0.w, r0.x
ret 
// Approximately 17 instruction slots used
