//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//
// }
//
// cbuffer CBPerFrame3
// {
//
//   float4x4 LightViewProjection;      // Offset:    0 Size:    64 [unused]
//   float4 ShadowColor;                // Offset:   64 Size:    16
//   float4 EyePos;                     // Offset:   80 Size:    16
//   float4 LightColor;                 // Offset:   96 Size:    16 [unused]
//
// }
//
// cbuffer CBPerFrame
// {
//
//   struct POINTLIGHT
//   {
//       
//       float index;                   // Offset:    0
//       float range;                   // Offset:    4
//       float type;                    // Offset:    8
//       float dummy;                   // Offset:   12
//       float4 pos;                    // Offset:   16
//       float4 color;                  // Offset:   32
//
//   } PointLight[8];                   // Offset:    0 Size:   384
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// shadowmapSamplerState             sampler      NA          NA             s1      1 
// diffuseMap                        texture  float4          2d             t0      1 
// Shadow_map                        texture  float4          2d             t1      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CBPerFrame3                       cbuffer      NA          NA            cb3      1 
// CBPerFrame                        cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// TEXCOORD                 2   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// NORMAL                   0   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB3[6], immediateIndexed
dcl_constantbuffer CB4[24], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.Wposition.x; v1.y <- pin.Wposition.y; v1.z <- pin.Wposition.z; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   v3.x <- pin.color.x; v3.y <- pin.color.y; v3.z <- pin.color.z; v3.w <- pin.color.w; 
//   v4.x <- pin.vShadow.x; v4.y <- pin.vShadow.y; v4.z <- pin.vShadow.z; 
//   v5.x <- pin.normal.x; v5.y <- pin.normal.y; v5.z <- pin.normal.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 52 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow.hlsli"
mov r0.x, l(0.000010)  // r0.x <- Bias

#line 11 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\PointLight.hlsli"
mov r0.y, l(8)  // r0.y <- POINTMAX

#line 8 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 9
dp3 r0.z, v5.xyzx, v5.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, v5.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 10
mov r3.xyz, -v0.xyzx
add r3.xyz, r3.xyzx, cb3[5].xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx  // r3.x <- E.x; r3.y <- E.y; r3.z <- E.z

#line 11
dp3 r0.z, cb0[4].xyzx, cb0[4].xyzx
rsq r0.z, r0.z
mul r4.xyz, r0.zzzz, cb0[4].xyzx  // r4.x <- L.x; r4.y <- L.y; r4.z <- L.z

#line 16
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- C.x; r5.y <- C.y; r5.z <- C.z

#line 17
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- Kd.x; r6.y <- Kd.y; r6.z <- Kd.z

#line 18
nop 
mov r2.xyz, r2.xyzx
mov r4.xyz, r4.xyzx
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx

#line 59 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow.hlsli"
mov r7.xyz, -r4.xyzx
dp3 r0.z, r2.xyzx, r7.xyzx  // r0.z <- D

#line 60
itof r0.w, l(0)
max r0.z, r0.z, r0.w

#line 61
itof r0.w, l(2)
div r0.z, r0.z, r0.w
add r0.z, r0.z, l(0.500000)  // r0.z <- D

#line 62
mul r7.xyz, r0.zzzz, r5.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <Diffuse return value>.x; r6.y <- <Diffuse return value>.y; r6.z <- <Diffuse return value>.z

#line 18 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow_ps.hlsl"
mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z

#line 21
mov r7.xyz, l(1.000000,1.000000,1.000000,0)  // r7.x <- Ks.x; r7.y <- Ks.y; r7.z <- Ks.z

#line 22
nop 
mov r2.xyz, r2.xyzx
mov r4.xyz, r4.xyzx
mov r5.xyz, r5.xyzx
mov r3.xyz, r3.xyzx
mov r7.xyz, r7.xyzx

#line 78 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow.hlsli"
mov r8.xyz, -r4.xyzx
dp3 r0.z, r8.xyzx, r2.xyzx
add r0.z, r0.z, r0.z
mov r0.z, -r0.z
mul r9.xyz, r0.zzzz, r2.xyzx
add r8.xyz, r8.xyzx, r9.xyzx
dp3 r0.z, r8.xyzx, r8.xyzx
rsq r0.z, r0.z
mul r8.xyz, r0.zzzz, r8.xyzx  // r8.x <- R.x; r8.y <- R.y; r8.z <- R.z

#line 79
dp3 r3.z, r8.xyzx, r3.xyzx
mov r3.xyz, r3.zzzz  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z

#line 80
itof r8.xyz, l(0, 0, 0, 0)
max r3.xyz, r3.xyzx, r8.xyzx

#line 81
mov r8.xyz, l(1.000000,1.000000,1.000000,0)
mul r3.xyz, r3.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, r3.xyzx
mul r8.xyz, r3.xyzx, r8.xyzx
mul r3.xyz, r3.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, r8.xyzx  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z

#line 82
mul r3.xyz, r7.xyzx, r3.xyzx
mul r3.xyz, r5.xyzx, r3.xyzx  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z

#line 83
mov r3.xyz, r3.xyzx  // r3.x <- <PhongSpecular return value>.x; r3.y <- <PhongSpecular return value>.y; r3.z <- <PhongSpecular return value>.z

#line 22 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow_ps.hlsl"
mov r3.xyz, r3.xyzx  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z

#line 23
nop 
mov r2.xyz, r2.xyzx
mov r4.xyz, r4.xyzx
mov r5.xyz, r5.xyzx
itof r7.xyz, l(1, 1, 1, 0)

#line 95 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow.hlsli"
mov r4.xyz, -r4.xyzx
dp3 r0.z, r2.xyzx, r4.xyzx  // r0.z <- D

#line 96
mul r0.z, r0.z, l(0.500000)
add r0.z, r0.z, l(0.500000)  // r0.z <- D

#line 98
mul r2.xyz, r0.zzzz, r5.xyzx
mul r2.xyz, r7.xyzx, r2.xyzx  // r2.x <- <HalfLambert return value>.x; r2.y <- <HalfLambert return value>.y; r2.z <- <HalfLambert return value>.z

#line 23 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow_ps.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- H.x; r2.y <- H.y; r2.z <- H.z

#line 26
nop 
mov r4.xyz, v1.xyzx

#line 58 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\PointLight.hlsli"
itof r5.xyz, l(0, 0, 0, 0)  // r5.x <- PD.x; r5.y <- PD.y; r5.z <- PD.z

#line 59
itof r7.xyz, l(0, 0, 0, 0)  // r7.x <- PS.x; r7.y <- PS.y; r7.z <- PS.z

#line 60
mov r0.z, l(0)  // r0.z <- i
mov r8.xyz, r5.xyzx  // r8.x <- PD.x; r8.y <- PD.y; r8.z <- PD.z
mov r0.w, r0.z  // r0.w <- i
loop 
  ilt r2.w, r0.w, r0.y
  breakc_z r2.w

#line 62
  imul null, r2.w, r0.w, l(3)
  itof r3.w, l(-1)
  ge r2.w, r3.w, cb4[r2.w + 0].x
  if_nz r2.w
    iadd r0.w, r0.w, l(1)
    continue 
  endif 

#line 63
  imul null, r2.w, r0.w, l(3)
  mov r9.xyz, -cb4[r2.w + 1].xyzx
  add r9.xyz, r4.xyzx, r9.xyzx  // r9.x <- PL.x; r9.y <- PL.y; r9.z <- PL.z

#line 64
  dp3 r2.w, r9.xyzx, r9.xyzx
  sqrt r2.w, r2.w  // r2.w <- d

#line 65
  imul null, r3.w, r0.w, l(3)
  mov r3.w, cb4[r3.w + 0].y  // r3.w <- r

#line 67
  lt r4.w, r3.w, r2.w
  if_nz r4.w
    iadd r0.w, r0.w, l(1)
    continue 
  endif 

#line 68
  div r2.w, r2.w, r3.w
  mov r2.w, -r2.w
  add r2.w, r2.w, l(1.000000)
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)  // r2.w <- influence

#line 70
  imul null, r3.w, r0.w, l(3)
  mov r9.xyz, cb4[r3.w + 2].xyzx  // r9.x <- PC.x; r9.y <- PC.y; r9.z <- PC.z

#line 71
  mul r9.xyz, r2.wwww, r9.xyzx
  add r8.xyz, r8.xyzx, r9.xyzx

#line 60
  iadd r0.w, r0.w, l(1)

#line 77
endloop 

#line 78
add r0.yzw, r7.xxyz, r8.xxyz  // r0.y <- <AddPointLight return value>.x; r0.z <- <AddPointLight return value>.y; r0.w <- <AddPointLight return value>.z

#line 26 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow_ps.hlsl"
mov r0.yzw, r0.yyzw  // r0.y <- PL.x; r0.z <- PL.y; r0.w <- PL.z

#line 32
add r3.xyz, r3.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
add r2.xyz, r0.yzwy, r2.xyzx
mov r2.w, l(1.000000)
mul r2.xyzw, r2.xyzw, v3.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw

#line 35
nop 
nop 
nop 
mov r0.y, v4.z
mov r2.xyz, cb3[4].xyzx
mov r0.x, r0.x

#line 137 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow.hlsli"
sample_indexable(texture2d)(float,float,float,float) r0.zw, v4.xyxx, t1.zwyx, s1
mov r0.zw, r0.zzzw  // r0.z <- d.y; r0.w <- d.x

#line 138
mul r2.w, r0.w, r0.w  // r2.w <- R

#line 140
mov r0.z, r0.z  // r0.z <- G

#line 144
mov r2.w, -r2.w
add r0.z, r0.z, r2.w
max r0.x, r0.z, r0.x  // r0.x <- variance

#line 146
mov r0.z, -r0.w
add r0.z, r0.z, r0.y
mov r0.w, -r0.w
add r0.y, r0.w, r0.y
mul r0.y, r0.y, r0.z
add r0.y, r0.y, r0.x  // r0.y <- a

#line 147
div r0.x, r0.x, r0.y
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(1.000000)  // r0.x <- p_max

#line 149
mov r0.yzw, -r2.xxyz
add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r0.yzw, r0.yyzw, r0.xxxx
add r0.yzw, r0.yyzw, r2.xxyz  // r0.y <- Scolor.x; r0.z <- Scolor.y; r0.w <- Scolor.z

#line 151
max r0.xyz, r0.xxxx, r0.yzwy  // r0.x <- <GetShadow return value>.x; r0.y <- <GetShadow return value>.y; r0.z <- <GetShadow return value>.z

#line 35 "C:\Users\taketomo\Desktop\GithubGameProgram\Shader\RenderShadow_ps.hlsl"
mul r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 51
mov o0.xyz, r0.xyzx
mov o0.w, r1.w
ret 
// Approximately 153 instruction slots used
