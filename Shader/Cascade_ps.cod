//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//
// }
//
// cbuffer CBPerFrame3
// {
//
//   float4x4 LightViewProjection[3];   // Offset:    0 Size:   192
//   float4 ShadowColor;                // Offset:  192 Size:    16
//   float4 EyePos;                     // Offset:  208 Size:    16
//   float4 LightColor;                 // Offset:  224 Size:    16 [unused]
//
// }
//
// cbuffer CBPerFrame
// {
//
//   struct POINTLIGHT
//   {
//       
//       float index;                   // Offset:    0
//       float range;                   // Offset:    4
//       float type;                    // Offset:    8
//       float dummy;                   // Offset:   12
//       float4 pos;                    // Offset:   16
//       float4 color;                  // Offset:   32
//
//   } PointLight[8];                   // Offset:    0 Size:   384
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// shadowmapSamplerState             sampler      NA          NA             s1      1 
// diffuseMap                        texture  float4          2d             t0      1 
// ShadowTexture0                    texture  float4          2d             t1      1 
// ShadowTexture1                    texture  float4          2d             t2      1 
// ShadowTexture2                    texture  float4          2d             t3      1 
// NormalTexture                     texture  float4          2d             t4      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CBPerFrame3                       cbuffer      NA          NA            cb3      1 
// CBPerFrame                        cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// TEXCOORD                 2   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float       
// NORMAL                   0   xyz         5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB3[14], immediateIndexed
dcl_constantbuffer CB4[24], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
dp3 r1.x, v6.xyzx, v6.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v6.xyzx
dp3 r1.w, v7.xyzx, v7.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v7.xyzx
dp3 r1.w, v8.xyzx, v8.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v8.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v2.xyxx, t4.xyzw, s0
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r4.yyyy
mad r1.xyz, r4.xxxx, r1.xyzx, r2.xyzx
mad r1.xyz, r4.zzzz, r3.xyzx, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r2.xyz, -v0.xyzx, cb3[13].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, cb0[4].xyzx, cb0[4].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb0[4].xyzx
dp3 r1.w, r1.xyzx, -r3.xyzx
max r2.w, r1.w, l(0.000000)
mad r2.w, r2.w, l(0.500000), l(0.500000)
add r3.w, r1.w, r1.w
mad r1.xyz, r1.xyzx, -r3.wwww, -r3.xyzx
dp3 r3.x, r1.xyzx, r1.xyzx
rsq r3.x, r3.x
mul r1.xyz, r1.xyzx, r3.xxxx
dp3 r1.x, r1.xyzx, r2.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.x
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mad r1.z, r1.w, l(0.500000), l(0.500000)
mov r2.xyz, l(0,0,0,0)
mov r1.w, l(0)
loop 
  ige r3.x, r1.w, l(8)
  breakc_nz r3.x
  imul null, r3.x, r1.w, l(3)
  ge r3.y, l(-1.000000), cb4[r3.x + 0].x
  if_nz r3.y
    iadd r3.y, r1.w, l(1)
    mov r1.w, r3.y
    continue 
  endif 
  add r3.yzw, v1.xxyz, -cb4[r3.x + 1].xxyz
  dp3 r3.y, r3.yzwy, r3.yzwy
  sqrt r3.y, r3.y
  lt r3.z, cb4[r3.x + 0].y, r3.y
  if_nz r3.z
    iadd r3.z, r1.w, l(1)
    mov r1.w, r3.z
    continue 
  endif 
  div r3.y, r3.y, cb4[r3.x + 0].y
  add_sat r3.y, -r3.y, l(1.000000)
  mad r2.xyz, cb4[r3.x + 2].xyzx, r3.yyyy, r2.xyzx
  iadd r1.w, r1.w, l(1)
endloop 
mad r1.x, r1.x, r1.y, r2.w
add r1.x, r1.z, r1.x
add r1.xyz, r2.xyzx, r1.xxxx
mov r1.w, l(1.000000)
mul r1.xyzw, r1.xyzw, v3.xyzw
mul r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v1.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, v1.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, v1.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
div r1.xyz, r1.xyzx, r1.wwww
mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
ge r1.w, r1.z, l(0.000000)
ge r2.x, l(1.000000), r1.z
and r1.w, r1.w, r2.x
ge r2.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.w, r1.w, r2.x
ge r2.xz, l(1.000000, 0.000000, 1.000000, 0.000000), r1.xxyx
and r1.w, r1.w, r2.x
and r1.w, r2.y, r1.w
and r1.w, r2.z, r1.w
if_nz r1.w
  sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t1.xyzw, s1
  add r1.x, -r1.x, r1.z
  lt r1.x, l(0.000900), r1.x
  movc r1.xyz, r1.xxxx, cb3[12].xyzx, l(1.000000,1.000000,1.000000,0)
  add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xyzx
endif 
if_z r1.w
  mul r2.xyzw, v1.yyyy, cb3[5].xyzw
  mad r2.xyzw, cb3[4].xyzw, v1.xxxx, r2.xyzw
  mad r2.xyzw, cb3[6].xyzw, v1.zzzz, r2.xyzw
  add r2.xyzw, r2.xyzw, cb3[7].xyzw
  div r2.xyz, r2.xyzx, r2.wwww
  mad r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  ge r2.w, r2.z, l(0.000000)
  ge r3.x, l(1.000000), r2.z
  and r2.w, r2.w, r3.x
  ge r3.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r2.w, r2.w, r3.x
  ge r3.xz, l(1.000000, 0.000000, 1.000000, 0.000000), r2.xxyx
  and r2.w, r2.w, r3.x
  and r2.w, r3.y, r2.w
  and r2.w, r3.z, r2.w
  if_nz r2.w
    sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t2.xyzw, s1
    add r2.x, -r2.x, r2.z
    lt r2.x, l(0.001000), r2.x
    movc r2.xyz, r2.xxxx, cb3[12].xyzx, l(1.000000,1.000000,1.000000,0)
    add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r1.xyz, r3.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r2.xyzx
  endif 
  mov r1.w, r2.w
else 
  mov r2.w, l(-1)
endif 
not r2.x, r2.w
not r2.y, r1.w
and r2.x, r2.y, r2.x
if_nz r2.x
  mul r2.xyzw, v1.yyyy, cb3[9].xyzw
  mad r2.xyzw, cb3[8].xyzw, v1.xxxx, r2.xyzw
  mad r2.xyzw, cb3[10].xyzw, v1.zzzz, r2.xyzw
  add r2.xyzw, r2.xyzw, cb3[11].xyzw
  div r2.xyz, r2.xyzx, r2.wwww
  mad r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  ge r2.w, r2.z, l(0.000000)
  ge r3.x, l(1.000000), r2.z
  and r2.w, r2.w, r3.x
  ge r3.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r2.w, r2.w, r3.x
  ge r3.xz, l(1.000000, 0.000000, 1.000000, 0.000000), r2.xxyx
  and r2.w, r2.w, r3.x
  and r2.w, r3.y, r2.w
  and r1.w, r3.z, r2.w
  if_nz r1.w
    sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t3.xyzw, s1
    add r2.x, -r2.x, r2.z
    lt r2.x, l(0.002000), r2.x
    movc r2.xyz, r2.xxxx, cb3[12].xyzx, l(1.000000,1.000000,1.000000,0)
    add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r1.xyz, r3.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r2.xyzx
  endif 
endif 
movc r1.xyz, r1.wwww, r1.xyzx, l(1.000000,1.000000,1.000000,0)
mul o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Approximately 155 instruction slots used
